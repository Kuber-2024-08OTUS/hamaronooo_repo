apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: homework
data:
  nginx.conf: |
      server {
          listen       8000;
          server_name  localhost;
          location / {
            root   /homework;
            autoindex on;
          }
      }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: homework
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: homework
                  operator: In
                  values:
                  - "true"
      initContainers:
      - name: init
        image: busybox
        command:
          - /bin/sh
          - -c
          - echo '<html><body><h1>INIT</h1></body></html>' > /init/index.html
        volumeMounts:
        - name: shared
          mountPath: /init
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 8000
          name: nginx-port
        volumeMounts:
        - name: shared
          mountPath: /homework
        - name: conf
          mountPath: /etc/nginx/conf.d
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 2
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
      volumes:
      - name: shared
        emptyDir: {}
      - name: conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf